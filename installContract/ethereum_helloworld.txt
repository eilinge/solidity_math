1:连接到以太坊测试网络
	geth --testnet --fast --cache=512 console

2:创建一个用户并设置密码
	personal.newAccount()
		"0x48b36831d4df42728cf5b09d08b29c8b488a2750"
		tester
3:在Geth提示符下输入以下代码, 确认新用户的账户余额为0, 并开始"挖矿"(mine)
	eth.getBalance(eth.accounts[0])
	miner.start()

4:新开一个命令行窗口并输入以下命令, 将这个窗口连接到正在挖矿的窗口
	geth attach  ipc:\\.\pipe\geth.ipc

5:确认新用户的账户余额有所增长
	eth.getBalance(eth.accounts[0])

pragma solidity ^0.4.0;

contract HelloWorld
{
    address creator;
    string greeting;

    function HelloWorld(string _greeting) public
    {
        creator = msg.sender;
        greeting = _greeting;
    }

    function greet() constant returns (string)
    {
        return greeting;
    }

    function setGreeting(string _newgreeting)
    {
        greeting = _newgreeting;
    }

     /**********
     Standard kill() function to recover funds
     **********/

    function kill()
    {
        if (msg.sender == creator)
            suicide(creator);  // kills this contract and sends remaining funds back to creator
    }
}

var _greeting = "Hello World" ;
var helloworldContract = web3.eth.contract([{"constant":false,"inputs":[],"name":"kill","outputs":[],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"_newgreeting","type":"string"}],"name":"setGreeting","outputs":[],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"greet","outputs":[{"name":"","type":"string"}],"payable":false,"type":"function"},{"inputs":[{"name":"_greeting","type":"string"}],"type":"constructor"}]);
var helloworld = helloworldContract.new(
   _greeting,
   {
     from: web3.eth.accounts[0],
     data: '606060405260405161044e38038061044e833981016040528080518201919060200150505b33600060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908302179055508060016000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061009e57805160ff19168380011785556100cf565b828001600101855582156100cf579182015b828111156100ce5782518260005055916020019190600101906100b0565b5b5090506100fa91906100dc565b808211156100f657600081815060009055506001016100dc565b5090565b50505b506103428061010c6000396000f360606040526000357c01000000000000000000000000000000000000000000000000000000009004806341c0e1b514610052578063a413686214610066578063cfae3217146100c15761004d565b610002565b34610002576100646004805050610141565b005b34610002576100bf6004808035906020019082018035906020019191908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509090919050506101d5565b005b34610002576100d36004805050610286565b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600302600f01f150905090810190601f1680156101335780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156101d257600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b5b565b8060016000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061022457805160ff1916838001178555610255565b82800160010185558215610255579182015b82811115610254578251826000505591602001919060010190610236565b5b5090506102809190610262565b8082111561027c5760008181506000905550600101610262565b5090565b50505b50565b602060405190810160405280600081526020015060016000508054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103335780601f1061030857610100808354040283529160200191610333565b820191906000526020600020905b81548152906001019060200180831161031657829003601f168201915b5050505050905061033f565b9056',
     gas: 30000000000
   }, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
 
 C:\Users\wuchan4x\Desktop\02f24422355c10fa36ff6743b610535468a52d92.jpg
 C:\Users\wuchan4x\Desktop\eilinge\photo\doutula\thumbs\small\0b6e9b695b9371538a22f20bbe589c7b3f6f66eb.jpg
 https://www.douban.com/misc/captcha?id=D0w73PaEwrpDKEzRJZBiNeZd:en&amp;size=s./captcha.jpg
 C:\Users\wuchan4x\Desktop\Capture.PNG
 
 user:	"0xa89c14211605f232376157d41dc44fe3188b07f3"
 ["0x436ef52588b8c2fb1ee14844afe94bb78a4072b7", "0xa89c14211605f232376157d41dc44fe3188b07f3"]
 passwd: tester 
 
 
     /*
    uint balance;
    function update(uint amount) returns(address,uint)
    {
        balance += amount;
        return (msg.sender,balance);
    }
    
    address creator;
    string greeting;

    function HelloWorld(string _greeting) public
    {
        creator = msg.sender;
        greeting = _greeting;
    }

    function greet() constant returns (string)
    {
        return greeting;
    }

    function setGreeting(string _newgreeting)
    {
        greeting = _newgreeting;
    }

     /**********
     Standard kill() function to recover funds
     **********/
    /*
    function kill()
    {
        if (msg.sender == creator)
            suicide(creator);  // kills this contract and sends remaining funds back to creator
    }
    */
	
var helloworldContract = web3.eth.contract([{"constant":false,"inputs":[],"name":"helloworld","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]);
var helloworld = helloworldContract.new(
   {
     from: web3.eth.accounts[0], 
     data: '0x608060405234801561001057600080fd5b5061013f806100206000396000f300608060405260043610610041576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680632f2f485914610046575b600080fd5b34801561005257600080fd5b5061005b6100d6565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561009b578082015181840152602081019050610080565b50505050905090810190601f1680156100c85780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b60606040805190810160405280600a81526020017f68656c6c6f776f726c64000000000000000000000000000000000000000000008152509050905600a165627a7a72305820a865864d21cc898a7789d4e0dc744980682b68ba0bbfcfb953f6d576743c92170029', 
     gas: '4700000'
   }, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
 
 
geth attach \\.\pipe\geth.ipc
"enode://9748050dd732c16ec85cf459e509da3551ff3559a4e80a4b82d5aeb8ae98e0c8414eec3c9b495c48b6b3f3c64a1e624eae5cc5a48f8ebf251e3be08b50cc9834@[::]:3100"
